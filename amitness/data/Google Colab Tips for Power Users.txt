Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.Colab is one of the best products to come from Google. It has made GPUs freely accessible to learners and practitioners like me who otherwise wouldn’t be able to afford a high-end GPU.While the interface is very easy to use, there are many lesser-known and undocumented features in colab. In this post, I will share those features that I’ve discovered from basic usage and their official talks.It’s a pretty common scenario that we have a bunch of cluttered untitled notebooks created when we try out temporary stuff on colab.
To solve this, you can bookmark the link given below. It will open a special  and any changes you make to that notebook are not saved to your main account.It’s pretty common that we manually calculate the difference between start and end times of a piece of code to gauge the time taken.Colab provides an inbuilt feature to do this. After a cell is executed, just hover over the cell run icon and you will get an estimate of the execution time taken.You can also run only a part of the cell by selecting it and pressing the  button or using the keyboard shortcut .If you are familiar with keyboard shortcuts from Jupyter Notebook, they don’t work directly in Colab. But I found a mental model to map between them.Just add  before whatever keyboard shortcut you were using in Jupyter. This rule of thumb works for the majority of common use-cases.Below are some notable exceptions to this rule for which either the shortcut is changed completely or kept the same.Similar to an IDE, you can go to a class definition by pressing  and then clicking a class name. For example, here we view the class definition of the Dense layer in Keras by pressing Ctrl and then clicking the  class name.The Google Colab team provides an official chrome extension to open notebooks on GitHub directly on colab. You can install it from .After installation, click the colab icon on any GitHub notebook to open it directly.Alternatively, you can also manually open any GitHub notebook by replacing  with .https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbAn even easier way is to replace  with . It will redirect you to a colab notebook.https:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbtohttps:///fastai/course-v3/blob/master/nbs/dl1/00_notebook_tutorial.ipynbWith a library called , you can easily expose a Flask web app running on colab to demo prototypes. First, you need to install  and .Then, you just need to pass your flask app object to  function and it will expose a ngrok endpoint when the server is started.You can try this out from the package author’s  on Colab.You can easily switch between Tensorflow 1 and Tensorflow 2 using this magic flag. 
To switch to Tensorflow 1.15.2, use this command:To switch to Tensorflow 2.2, run this command:You will need to restart the runtime for the effect to take place. Colab recommends using the pre-installed Tensorflow version instead of installing it from  for performance reasons.Colab also provides a magic command to use Tensorboard directly from the notebook. You just need to set the logs directory location using the  flag. You can learn to use it from the .Colab provides the following specs for their free and pro versions. Based on your use case, you can switch to the pro version at $10/month if you need a better runtime, GPU, and memory.You can view the GPU you have been assigned by running the following commandFor information on the CPU, you can run this commandSimilarly, you can view the RAM capacity by runningThere is no built-in interactive terminal in Colab. But you can use the  command to try out shell commands interactively. Just run this command and you will get an interactive input.Now, you can run any shell command in the given input box.To quit from the shell, just type  in the input box.Colab provides an indicator of RAM and disk usage. If you hover over the indicator, you will get a popup with the current usage and the total capacity.You can add a ‘Open in Colab’ badge to your  or jupyter notebooks using the following markdown code.
In the markdown code, we’re loading an SVG image and then linking it to a colab notebook.Colab provides a notebook extension to add interactive sorting and filtering capabilities to pandas dataframes. To use it, run the following code.You can see the regular pandas dataframe and the interactive dataframe after loading the extension below.

If you use miniconda as your python environment manager, you can setup it on colab by running these commands at the top of your notebook.After the cell is executed, you can use conda to install packages as usual.Alternatively, you can use  package to install it easily.Then, run these python commands to install miniconda.You can use a library called  to easily create and sync colab notebooks with your local notebooks.There are use-cases when we need to start some web server or background tasks before we can execute our regular program.To run background tasks, use the  command followed by your regular shell command and add  to the end to run it in the background. This makes sure that you can run cells afterward in the notebook without your background task blocking it.If you’re running a long task such as training a model, you can setup Colab to send a desktop notification once it’s completed.To enable that, goto Tools ⮕ Settings ⮕ Site and enable  checkbox.You will get a popup to enable browser notification. Just accept it and colab will notify you on task completion even if you are on another tab, window or application.You can run javascript code by using the  magic command.You can run a full-fledged VSCode editor on Colab by following the method I have explained in another .You can save your own collections of useful snippets and access them easily in any colab notebook.Create a colab notebook called . To add each of your snippets, create a markdown cell and add name of the snippet as header. Below, the markdown cell, add a code cell with the snippet code.Copy the link of this notebook from the browser tab.Click  in your menu bar to open preference of colab.
Paste the link into the  textbox and click save.You can start a JupyterLab instance on colab by running the following commands in a cell.Once executed, click the printed ngrok URL to access the JupyterLab interface.You can use R programming language in Google Colab by going to . It will open a new notebook with R set as the kernel instead of Python.